// PRINTF

%[flags][width][.precision] specifier

~~ Requirement

cspdiuxX% | -0. | # + (with spaces)

[specifier] _______________________________________________________________________________________

c : Character
s : String
p : Pointer address	
d / i : Int
u : unsigned Int
x : Unsigned hexadecimal integer
X : Unsigned hexadecimal integer (Uppercase)

[flags] _______________________________________________________________________________________________

-
  Left-justify within the given field width; Right justification is the default

+
  Forces to preceed the result with a plus or minus sign (+ or -) even for positive numbers. 
  By default, only negative numbers are preceded with a - sign.

(space)
  If no sign is going to be written, a blank space is inserted before the value.

#
  Used with x or X specifiers the value is preceeded with 0, 0x or 0X respectively 
  for values different than zero.

0
  Left-pads the number with zeroes (0) instead of spaces when padding is specified

[width] _________________________________________________________________________________________________

(number)
  Minimum number of characters to be printed. 
  If the value to be printed is shorter than this number, the result is padded with blank spaces. 
  The value is not truncated even if the result is larger.

[.precision] ____________________________________________________________________________________________

  For integer specifiers (d, i, u, x, X): precision specifies the minimum number of digits to be written.
  If the value to be written is shorter than this number, the result is padded with leading zeros. 
  The value is not truncated even if the result is longer. 
  A precision of 0 means that no character is written for the value 0.

  For s: this is the maximum number of characters to be printed. 
  By default all characters are printed until the ending null character is encountered.

